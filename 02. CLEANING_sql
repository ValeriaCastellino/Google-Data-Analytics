-- I checked for duplicates rides

SELECT DISTINCT ride_id,rideable_type, started_at, ended_at, start_station_name,member_casual
FROM effective-reach-425916-a5.cyclistic_project.users_analysis_202311_202410;

--Tot distinct rides are 5,788,839 against 6,012,003 entries. There were 223,164 duplicates.


-- Cleaning data set from duplicate and null values

SELECT DISTINCT *
FROM `effective-reach-425916-a5.cyclistic_project.users_analysis_202311_202410`
WHERE
  start_station_name IS NOT NULL AND
  start_station_id IS NOT NULL AND
  end_station_name IS NOT NULL AND
  end_station_id IS NOT NULL AND
  start_lat IS NOT NULL AND
  start_lng IS NOT NULL AND
  end_lat IS NOT NULL AND
  end_lng IS NOT NULL;

  -- Data set named users_analysis_cleandata. This table contains distinct ride_id, and ride_ids that donâ€™t have null values for start and end stations. The table contains 4,159,741 records.
I have saved a table for these distinct rides to work on.

-- Data tested for consistency: I first got the total numbero for ride_id, rideable_type, and member_casual to 

SELECT COUNT (*), rideable_type
FROM `effective-reach-425916-a5.cyclistic_project.distinct_users_analysis`
GROUP BY rideable_type;

SELECT COUNT (*), member_casual
FROM `effective-reach-425916-a5.cyclistic_project.distinct_users_analysis`
GROUP BY member_casual;

SELECT
  LENGTH (ride_id)
FROM
  `effective-reach-425916-a5.cyclistic_project.distinct_users_analysis`
WHERE
 LENGTH(ride_id) >16 AND
 LENGTH(ride_id) <16

SELECT
  LENGTH (member_casual)
FROM
  `effective-reach-425916-a5.cyclistic_project.distinct_users_analysis`
WHERE
  LENGTH (member_casual) <> 6



-- Create columns for trip duration (in minutes), month, day of the week. Outliers for trip duration less than 1 minute or more than 1440 removed
   SELECT
  ride_id,
  rideable_type,
  started_at,
  ended_at,
  trip_duration_minute,
  CASE
  EXTRACT(MONTH FROM started_at)
    WHEN 1 THEN 'January'
    WHEN 2 THEN 'February'
    WHEN 3 THEN 'March'
    WHEN 4 THEN 'April'
    WHEN 5 THEN 'May'      
    WHEN 6 THEN 'June'
    WHEN 7 THEN 'July'
    WHEN 8 THEN 'August'
    WHEN 9 THEN 'September'
    WHEN 10 THEN 'October'      
    WHEN 11 THEN 'November'
    WHEN 12 THEN 'December'
  END AS month,
  CASE EXTRACT(DAYOFWEEK FROM started_at)
    WHEN 1 THEN 'Sunday'
    WHEN 2 THEN 'Monday'
    WHEN 3 THEN 'Tuesday'
    WHEN 4 THEN 'Wednesday'
    WHEN 5 THEN 'Thursday'
    WHEN 6 THEN 'Friday'
    WHEN 7 THEN 'Saturday'    
  END AS day_of_week,
  start_station_name,
  start_station_id,
  end_station_name,
  end_station_id,
  start_lat,
  start_lng,
  end_lat,
  end_lng,
  member_casual,
FROM `effective-reach-425916-a5.cyclistic_project.users_analysis_cleandata` AS data1
JOIN
  (SELECT ride_id,
   TIMESTAMP_DIFF(ended_at, started_at, MINUTE) AS trip_duration_minute
  FROM `effective-reach-425916-a5.cyclistic_project.users_analysis_cleandata`) AS data2
USING(ride_id)
WHERE trip_duration_minute > 1 AND trip_duration_minute < 1440
  ;
-- Table named cyclistic_users_analysis with 4,045,952 records that will be used for analysis
